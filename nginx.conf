events {
    multi_accept on;
    worker_connections 16384;
    use epoll;
}

http {
    proxy_set_header X-Forwarded-For $remote_addr;
    sendfile on;
    keepalive_timeout 75s;
    keepalive_requests 100;

    underscores_in_headers off;
    ignore_invalid_headers on;
    limit_req_status 503;
    limit_conn_status 503;

    log_format nginx_log_format '[$time_local] $remote_addr - $remote_user: '
                                'Request: "$request" - '
                                'Status: $status - '
                                'Request time: $request_time s - '
                                'Body Length: $body_bytes_sent bytes - '
                                'User agent: "$http_user_agent" - '
                                'HTTP referer: "$http_referer"';

    error_log /dev/stdout;
    access_log /dev/stdout nginx_log_format;

    upstream backend {
        server rivian-be:3000;
    }

    upstream nuxt {
      server host.docker.internal:3000;
    }

    server {
        server_name _;
        listen 8080;

        location /api/ {
            proxy_pass http://backend;
            client_max_body_size 64M;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            client_max_body_size 64M;
            proxy_pass http://nuxt;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
